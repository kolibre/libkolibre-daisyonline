Index: axis2-src/modules/adb-codegen/src/org/apache/axis2/schema/template/CADBBeanTemplateSource.xsl
===================================================================
--- axis2-src/modules/adb-codegen/src/org/apache/axis2/schema/template/CADBBeanTemplateSource.xsl   2013-11-05 11:21:41.000000000 +0200
+++ axis2-src/modules/adb-codegen/src/org/apache/axis2/schema/template/CADBBeanTemplateSource.xsl   2013-11-05 15:38:40.000000000 +0200
@@ -4129,28 +4129,6 @@


             <xsl:if test="@type">
-              <!-- now put the xsi:type to identify the types on polymorphic cases -->
-
-              if(!(xsi_prefix = (axis2_char_t*)axutil_hash_get(namespaces, "http://www.w3.org/2001/XMLSchema-instance", AXIS2_HASH_KEY_STRING)))
-              {
-                  /* it is better to stick with the standard prefix */
-                  xsi_prefix = (axis2_char_t*)axutil_strdup(env, "xsi");
-
-                  axutil_hash_set(namespaces, "http://www.w3.org/2001/XMLSchema-instance", AXIS2_HASH_KEY_STRING, xsi_prefix);
-
-                  if(parent_element)
-                  {
-                        axiom_namespace_t *element_ns = NULL;
-                        element_ns = axiom_namespace_create(env, "http://www.w3.org/2001/XMLSchema-instance",
-                                                            xsi_prefix);
-                        axiom_element_declare_namespace_assume_param_ownership(parent_element, env, element_ns);
-                  }
-              }
-              type_attrib = axutil_strcat(env, " ", xsi_prefix, ":type=\"<xsl:value-of select="$type_name"/>\"", NULL);
-              axutil_stream_write(stream, env, type_attrib, axutil_strlen(type_attrib));
-
-              AXIS2_FREE(env->allocator, type_attrib);
-
               string_to_stream = "&gt;"; <!-- The ending tag of the parent -->
               axutil_stream_write(stream, env, string_to_stream, axutil_strlen(string_to_stream));
               tag_closed = 1;
@@ -4159,30 +4137,6 @@
              <!-- end bracket for if(!parent_tag_closed)-->
             <xsl:if test="count(property[@attribute])!=0 or @type">
             }
-            else {
-              /* if the parent tag closed we would be able to declare the type directly on the parent element */
-              if(!(xsi_prefix = (axis2_char_t*)axutil_hash_get(namespaces, "http://www.w3.org/2001/XMLSchema-instance", AXIS2_HASH_KEY_STRING)))
-              {
-                  /* it is better to stick with the standard prefix */
-                  xsi_prefix = (axis2_char_t*)axutil_strdup(env, "xsi");
-
-                  axutil_hash_set(namespaces, "http://www.w3.org/2001/XMLSchema-instance", AXIS2_HASH_KEY_STRING, xsi_prefix);
-
-                  if(parent_element)
-                  {
-                        axiom_namespace_t *element_ns = NULL;
-                        element_ns = axiom_namespace_create(env, "http://www.w3.org/2001/XMLSchema-instance",
-                                                            xsi_prefix);
-                        axiom_element_declare_namespace_assume_param_ownership(parent_element, env, element_ns);
-                  }
-              }
-            }
-            xsi_ns = axiom_namespace_create (env,
-                                 "<xsl:value-of select="@nsuri"/>",
-                                 xsi_prefix);
-            xsi_type_attri = axiom_attribute_create (env, "type", "<xsl:value-of select="$type_name"/>", xsi_ns);
-            <!-- TODO: parent here can be data_source node, not element node should be fixed -->
-            axiom_element_add_attribute (parent_element, env, xsi_type_attri, parent);
         </xsl:if>

             <xsl:if test="$isUnion">

